# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

from typing_extensions import Literal as typing_extensions___Literal

builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode

class PricePatterns(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> "PricePatterns": ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List["PricePatterns"]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, "PricePatterns"]]: ...
    FLUCTUATING = typing___cast("PricePatterns", 0)
    BIGSPIKE = typing___cast("PricePatterns", 1)
    DECREASING = typing___cast("PricePatterns", 2)
    SMALLSPIKE = typing___cast("PricePatterns", 3)
    UNKNOWN = typing___cast("PricePatterns", 4)

FLUCTUATING = typing___cast("PricePatterns", 0)
BIGSPIKE = typing___cast("PricePatterns", 1)
DECREASING = typing___cast("PricePatterns", 2)
SMALLSPIKE = typing___cast("PricePatterns", 3)
UNKNOWN = typing___cast("PricePatterns", 4)
global___PricePatterns = PricePatterns

class ImageFormat(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> "ImageFormat": ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List["ImageFormat"]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, "ImageFormat"]]: ...
    SVG = typing___cast("ImageFormat", 0)
    PNG = typing___cast("ImageFormat", 1)

SVG = typing___cast("ImageFormat", 0)
PNG = typing___cast("ImageFormat", 1)
global___ImageFormat = ImageFormat

class Ticker(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    purchase_price = ...  # type: builtin___int
    previous_pattern = ...  # type: global___PricePatterns
    prices = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int]
    current_period = ...  # type: builtin___int
    def __init__(
        self,
        *,
        purchase_price: typing___Optional[builtin___int] = None,
        previous_pattern: typing___Optional[global___PricePatterns] = None,
        prices: typing___Optional[typing___Iterable[builtin___int]] = None,
        current_period: typing___Optional[builtin___int] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Ticker: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> Ticker: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "current_period",
            b"current_period",
            "previous_pattern",
            b"previous_pattern",
            "prices",
            b"prices",
            "purchase_price",
            b"purchase_price",
        ],
    ) -> None: ...

global___Ticker = Ticker

class PricePeriod(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    min = ...  # type: builtin___int
    max = ...  # type: builtin___int
    is_spike = ...  # type: builtin___bool
    def __init__(
        self,
        *,
        min: typing___Optional[builtin___int] = None,
        max: typing___Optional[builtin___int] = None,
        is_spike: typing___Optional[builtin___bool] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PricePeriod: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PricePeriod: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "is_spike", b"is_spike", "max", b"max", "min", b"min"
        ],
    ) -> None: ...

global___PricePeriod = PricePeriod

class PricesSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    min = ...  # type: builtin___int
    max = ...  # type: builtin___int
    guaranteed = ...  # type: builtin___int
    min_periods = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int]
    max_periods = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int]
    guaranteed_periods = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int]
    def __init__(
        self,
        *,
        min: typing___Optional[builtin___int] = None,
        max: typing___Optional[builtin___int] = None,
        guaranteed: typing___Optional[builtin___int] = None,
        min_periods: typing___Optional[typing___Iterable[builtin___int]] = None,
        max_periods: typing___Optional[typing___Iterable[builtin___int]] = None,
        guaranteed_periods: typing___Optional[typing___Iterable[builtin___int]] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PricesSummary: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PricesSummary: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "guaranteed",
            b"guaranteed",
            "guaranteed_periods",
            b"guaranteed_periods",
            "max",
            b"max",
            "max_periods",
            b"max_periods",
            "min",
            b"min",
            "min_periods",
            b"min_periods",
        ],
    ) -> None: ...

global___PricesSummary = PricesSummary

class SpikeRange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    has = ...  # type: builtin___bool
    start = ...  # type: builtin___int
    end = ...  # type: builtin___int
    def __init__(
        self,
        *,
        has: typing___Optional[builtin___bool] = None,
        start: typing___Optional[builtin___int] = None,
        end: typing___Optional[builtin___int] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SpikeRange: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> SpikeRange: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "end", b"end", "has", b"has", "start", b"start"
        ],
    ) -> None: ...

global___SpikeRange = SpikeRange

class PotentialWeek(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    chance = ...  # type: builtin___float
    @property
    def prices(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PricePeriod
    ]: ...
    @property
    def prices_summary(self) -> global___PricesSummary: ...
    @property
    def prices_future(self) -> global___PricesSummary: ...
    @property
    def spike(self) -> global___SpikeRange: ...
    def __init__(
        self,
        *,
        chance: typing___Optional[builtin___float] = None,
        prices: typing___Optional[typing___Iterable[global___PricePeriod]] = None,
        prices_summary: typing___Optional[global___PricesSummary] = None,
        prices_future: typing___Optional[global___PricesSummary] = None,
        spike: typing___Optional[global___SpikeRange] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PotentialWeek: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PotentialWeek: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spike",
            b"spike",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "chance",
            b"chance",
            "prices",
            b"prices",
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spike",
            b"spike",
        ],
    ) -> None: ...

global___PotentialWeek = PotentialWeek

class PotentialPattern(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    pattern = ...  # type: global___PricePatterns
    chance = ...  # type: builtin___float
    @property
    def prices_summary(self) -> global___PricesSummary: ...
    @property
    def prices_future(self) -> global___PricesSummary: ...
    @property
    def spike(self) -> global___SpikeRange: ...
    @property
    def potential_weeks(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PotentialWeek
    ]: ...
    def __init__(
        self,
        *,
        pattern: typing___Optional[global___PricePatterns] = None,
        chance: typing___Optional[builtin___float] = None,
        prices_summary: typing___Optional[global___PricesSummary] = None,
        prices_future: typing___Optional[global___PricesSummary] = None,
        spike: typing___Optional[global___SpikeRange] = None,
        potential_weeks: typing___Optional[
            typing___Iterable[global___PotentialWeek]
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> PotentialPattern: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> PotentialPattern: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spike",
            b"spike",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "chance",
            b"chance",
            "pattern",
            b"pattern",
            "potential_weeks",
            b"potential_weeks",
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spike",
            b"spike",
        ],
    ) -> None: ...

global___PotentialPattern = PotentialPattern

class SpikeChances(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    has = ...  # type: builtin___bool
    start = ...  # type: builtin___int
    end = ...  # type: builtin___int
    chance = ...  # type: builtin___float
    breakdown = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float]
    def __init__(
        self,
        *,
        has: typing___Optional[builtin___bool] = None,
        start: typing___Optional[builtin___int] = None,
        end: typing___Optional[builtin___int] = None,
        chance: typing___Optional[builtin___float] = None,
        breakdown: typing___Optional[typing___Iterable[builtin___float]] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SpikeChances: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> SpikeChances: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "breakdown",
            b"breakdown",
            "chance",
            b"chance",
            "end",
            b"end",
            "has",
            b"has",
            "start",
            b"start",
        ],
    ) -> None: ...

global___SpikeChances = SpikeChances

class ForecastSpikes(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    @property
    def small(self) -> global___SpikeChances: ...
    @property
    def big(self) -> global___SpikeChances: ...
    @property
    def any(self) -> global___SpikeChances: ...
    def __init__(
        self,
        *,
        small: typing___Optional[global___SpikeChances] = None,
        big: typing___Optional[global___SpikeChances] = None,
        any: typing___Optional[global___SpikeChances] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ForecastSpikes: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> ForecastSpikes: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "any", b"any", "big", b"big", "small", b"small"
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "any", b"any", "big", b"big", "small", b"small"
        ],
    ) -> None: ...

global___ForecastSpikes = ForecastSpikes

class Forecast(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    @property
    def prices_summary(self) -> global___PricesSummary: ...
    @property
    def prices_future(self) -> global___PricesSummary: ...
    @property
    def spikes(self) -> global___ForecastSpikes: ...
    @property
    def patterns(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        global___PotentialPattern
    ]: ...
    def __init__(
        self,
        *,
        prices_summary: typing___Optional[global___PricesSummary] = None,
        prices_future: typing___Optional[global___PricesSummary] = None,
        spikes: typing___Optional[global___ForecastSpikes] = None,
        patterns: typing___Optional[
            typing___Iterable[global___PotentialPattern]
        ] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Forecast: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> Forecast: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spikes",
            b"spikes",
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "patterns",
            b"patterns",
            "prices_future",
            b"prices_future",
            "prices_summary",
            b"prices_summary",
            "spikes",
            b"spikes",
        ],
    ) -> None: ...

global___Forecast = Forecast

class ReqForecastChart(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    format = ...  # type: global___ImageFormat
    color_background = ...  # type: typing___Text
    padding = ...  # type: builtin___float
    @property
    def ticker(self) -> global___Ticker: ...
    @property
    def forecast(self) -> global___Forecast: ...
    def __init__(
        self,
        *,
        ticker: typing___Optional[global___Ticker] = None,
        forecast: typing___Optional[global___Forecast] = None,
        format: typing___Optional[global___ImageFormat] = None,
        color_background: typing___Optional[typing___Text] = None,
        padding: typing___Optional[builtin___float] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ReqForecastChart: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> ReqForecastChart: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions___Literal[
            "forecast", b"forecast", "ticker", b"ticker"
        ],
    ) -> builtin___bool: ...
    def ClearField(
        self,
        field_name: typing_extensions___Literal[
            "color_background",
            b"color_background",
            "forecast",
            b"forecast",
            "format",
            b"format",
            "padding",
            b"padding",
            "ticker",
            b"ticker",
        ],
    ) -> None: ...

global___ReqForecastChart = ReqForecastChart

class RespChart(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    chart = ...  # type: builtin___bytes
    def __init__(
        self, *, chart: typing___Optional[builtin___bytes] = None,
    ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> RespChart: ...
    else:
        @classmethod
        def FromString(
            cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]
        ) -> RespChart: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(
        self, field_name: typing_extensions___Literal["chart", b"chart"]
    ) -> None: ...

global___RespChart = RespChart
