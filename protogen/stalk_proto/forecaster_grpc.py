# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: stalk_proto/forecaster.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client

if typing.TYPE_CHECKING:
    import grpclib.server

import protogen.stalk_proto.google.api.annotations_pb2
import protogen.stalk_proto.models_pb2
import protogen.stalk_proto.forecaster_pb2


class StalkForecasterBase(abc.ABC):
    @abc.abstractmethod
    async def ForecastPrices(
        self,
        stream: "grpclib.server.Stream[protogen.stalk_proto.models_pb2.Ticker, protogen.stalk_proto.models_pb2.Forecast]",
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/proto.StalkForecaster/ForecastPrices": grpclib.const.Handler(
                self.ForecastPrices,
                grpclib.const.Cardinality.UNARY_UNARY,
                protogen.stalk_proto.models_pb2.Ticker,
                protogen.stalk_proto.models_pb2.Forecast,
            ),
        }


class StalkForecasterStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ForecastPrices = grpclib.client.UnaryUnaryMethod(
            channel,
            "/proto.StalkForecaster/ForecastPrices",
            protogen.stalk_proto.models_pb2.Ticker,
            protogen.stalk_proto.models_pb2.Forecast,
        )
